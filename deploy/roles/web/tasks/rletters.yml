---
# Copy and deploy the application code

- name: Install code dependencies
  yum: name={{ item }} state=present
  with_items:
    - nodejs
    - git
  tags: rletters

- name: Create RLetters directory
  file: path=/opt/rletters state=directory
  tags: rletters

- name: Create RLetters state directory
  file: path=/opt/rletters/state state=directory
  tags: rletters

- name: Check out RLetters via git
  git: repo=git://github.com/cpence/rletters.git dest=/opt/rletters/root
  tags: rletters

- name: Create bundle directory
  file: path=/opt/rletters/state/bundle state=directory
  tags: rletters

- name: Symlink bundle directory
  file: src=/opt/rletters/state/bundle path=/opt/rletters/root/vendor/bundle state=link
  tags: rletters

- name: Install bundle to vendor/bundle
  command: chdir=/opt/rletters/root/ bundle install --deployment --without development test
  tags: rletters

- name: Create database.yml file
  template: src=database.yml.j2 dest=/opt/rletters/state/database.yml
  tags: rletters

- name: Symlink database.yml file
  file: src=/opt/rletters/state/database.yml path=/opt/rletters/root/config/database.yml state=link
  tags: rletters

- name: Set Java environment JAVA_HOME configuration
  lineinfile: dest=/opt/rletters/root/config/initializers/01_java_bridge.rb regexp="^#?ENV\['JAVA_HOME'\]\s*=" line="ENV['JAVA_HOME'] = '/usr/lib/jvm/java'" state=present
  tags: rletters

- name: Set Java environment LD_LIBRARY_PATH configuration
  lineinfile: dest=/opt/rletters/root/config/initializers/01_java_bridge.rb regexp="^#?ENV\['LD_LIBRARY_PATH'\]\s*=" line="ENV['LD_LIBRARY_PATH'] = '/usr/lib/jvm/java/jre/lib/amd64:/usr/lib/jvm/java/jre/lib/amd64/client'" state=present
  tags: rletters

- name: Create the sockets directory
  file: path=/opt/rletters/root/tmp/sockets state=directory
  tags: rletters

- name: Fetch the Stanford NLP package
  get_url: url=http://louismullie.com/treat/stanford-core-nlp-full.zip dest=/tmp/stanford-core-nlp-full.zip
  tags: rletters

- name: Install unzip
  yum: name=unzip state=present
  tags: rletters

- name: Unzip the Stanford NLP package
  command: chdir=/opt/rletters/root/vendor/nlp/ unzip /tmp/stanford-core-nlp-full.zip creates=/opt/rletters/root/vendor/nlp/stanford-corenlp.jar
  tags: rletters

# This shouldn't cause damage, but we don't put the rletters tag on it, just to
# be safe.
- name: Migrate the database
  shell: chdir=/opt/rletters/root/ bundle exec rake db:migrate RAILS_ENV=production
  register: migrate_result
  changed_when: migrate_result.stdout != ''
  tags: rletters_migrate

# This should only seed the database once, but just to be safe, we don't put
# the rletters tag on this.
- name: Seed the database
  shell: chdir=/opt/rletters/root/ creates=/opt/rletters/state/database_seeded bundle exec rake db:seed RAILS_ENV=production && touch /opt/rletters/state/database_seeded
  tags: rletters_seed

- name: Precompile the assets
  shell: chdir=/opt/rletters/root/ bundle exec rake assets:precompile RAILS_ENV=production
  tags: rletters

- name: Set the ownership for the RLetters directory
  file: path=/opt/rletters owner=rletters_deploy group=rletters_deploy state=directory recurse=yes
  tags: rletters

- name: Set the setting to point RLetters at the local Solr server
  command: chdir=/opt/rletters/root bundle exec rake setting:set[solr_server_url,http://localhost:8080/solr/] RAILS_ENV=production
  when: inventory_hostname == groups['solrserver'][0]
  tags: rletters

- name: Set the setting to point RLetters at the external Solr server
  command: chdir=/opt/rletters/root bundle exec rake setting:set[solr_server_url,{{ hostvars[groups['solrserver'][0]]['ansible_eth0']['ipv4']['address'] }}] RAILS_ENV=production
  when: inventory_hostname != groups['solrserver'][0]
  tags: rletters
