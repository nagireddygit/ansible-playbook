<?xml version="1.0" encoding="UTF-8" ?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<!--
 This is the Solr schema file. This file should be named "schema.xml" and
 should be in the conf directory under the solr home
 (i.e. ./solr/conf/schema.xml by default)
 or located where the classloader for the Solr webapp can find it.

 This example schema is the recommended starting point for users.
 It should be kept correct and concise, usable out-of-the-box.

 For more information, on how to customize this file, please see
 http://wiki.apache.org/solr/SchemaXml

 PERFORMANCE NOTE: this schema includes many optional features and should not
 be used for benchmarking.  To improve performance one could
  - set stored="false" for all fields possible (esp large fields) when you
    only need to search on the field but don't need to return the original
    value.
  - set indexed="false" if you don't need to search on the field, but only
    return the field as a result of searching on other indexed fields.
  - remove all unneeded copyField statements
  - for best index size and searching performance, set "index" to false
    for all general text fields, use copyField to copy them to the
    catchall "text" field, and use that for searching.
  - For maximum indexing performance, use the StreamingUpdateSolrServer
    java client.
  - Remember to run the JVM in server mode, and use a higher logging level
    that avoids logging every request
-->

<schema name="rletters-2.0" version="1.5">
  <!-- Required by Solr internals in version 4 -->
  <field name="_version_" type="long" indexed="true"  stored="true"/>

  <!-- UID and DOI are stored verbatim -->
  <field name="uid" type="string" indexed="true" stored="true" required="true" omitNorms="true" multiValued="false" />
  <field name="doi" type="string" indexed="true" stored="true" omitNorms="true" />

  <!-- The license type and URL are stored verbatim -->
  <field name="license" type="string" indexed="true" stored="true" omitNorms="true" />
  <field name="license_url" type="string" indexed="true" stored="true" omitNorms="true" />

  <!-- The original source for this piece of data (searchable) -->
  <field name="data_source" type="text_splitLower" indexed="true" stored="true" omitNorms="true" />

  <!-- The original bibliographic data: search it, but don't delete stopwords -->
  <field name="authors" type="text_splitLower" indexed="true" stored="true" omitNorms="true" />
  <field name="title" type="text_splitLower" indexed="true" stored="true" omitNorms="true" />
  <field name="journal" type="text_splitLower" indexed="true" stored="true" omitNorms="true" />
  <field name="year" type="text_splitLower" indexed="true" stored="true" omitNorms="true" />
  <field name="volume" type="text_splitLower" indexed="true" stored="true" omitNorms="true" />
  <field name="number" type="text_splitLower" indexed="true" stored="true" omitNorms="true" />
  <field name="pages" type="text_pageNumber" indexed="true" stored="true" omitNorms="true" />

  <!-- The original full text, for text analysis -->
  <field name="fulltext" type="text_splitLower" indexed="true" stored="true" omitNorms="false" termVectors="true" termPositions="true" termOffsets="true" />

  <!-- If we have to fetch full text from an HTTP server, then we store the
      URL verbatim, and we have a *non*-stored field for term vectors. -->
  <field name="fulltext_url" type="string" indexed="true" stored="true" omitNorms="true" />
  <field name="fulltext_ns" type="text_splitLower" indexed="true" stored="false" omitNorms="false" termVectors="true" termPositions="true" termOffsets="true" />

  <!-- The full text for searching, with stop words removed -->
  <field name="fulltext_search" type="text_splitLowerStop" indexed="true" stored="false" omitNorms="true" multiValued="true" />

  <!-- These three fields can be searched with stemming enabled -->
  <field name="title_stem" type="text_splitLowerStopStem" indexed="true" stored="false" omitNorms="true" />
  <field name="journal_stem" type="text_splitLowerStopStem" indexed="true" stored="false" omitNorms="true" />
  <field name="fulltext_stem" type="text_splitLowerStopStem" indexed="true" stored="false" omitNorms="false" multiValued="true" />

  <!-- Faceting stores data in different formats (authors are tokenized by author,
      journals aren't tokenized whatsoever) -->
  <field name="authors_facet" type="text_commaDelimited" indexed="true" stored="false" omitNorms="true" />
  <field name="journal_facet" type="text_noTokens" indexed="true" stored="false" omitNorms="true" />

  <!-- Sorting requires fields that aren't tokenized at all -->
  <field name="authors_sort" type="text_noTokens" indexed="true" stored="false" omitNorms="true" />
  <field name="title_sort" type="text_noTokens" indexed="true" stored="false" omitNorms="true" />
  <field name="journal_sort" type="text_noTokens" indexed="true" stored="false" omitNorms="true" />
  <field name="year_sort" type="text_noTokens" indexed="true" stored="false" omitNorms="true" />


  <!-- Field to use to determine and enforce document uniqueness.
      Unless this field is marked with required="false", it will be a required field
   -->
  <uniqueKey>uid</uniqueKey>

  <!-- Copy our _stem fields -->
  <copyField source="title" dest="title_stem"/>
  <copyField source="journal" dest="journal_stem"/>
  <copyField source="fulltext" dest="fulltext_stem"/>
  <copyField source="fulltext_ns" dest="fulltext_stem"/>

  <!-- Copy over the full texts to the search field -->
  <copyField source="fulltext" dest="fulltext_search"/>
  <copyField source="fulltext_ns" dest="fulltext_search"/>

  <!-- Copy our facet fields -->
  <copyField source="authors" dest="authors_facet"/>
  <copyField source="journal" dest="journal_facet"/>

  <!-- Copy our sort fields -->
  <copyField source="authors" dest="authors_sort"/>
  <copyField source="title" dest="title_sort"/>
  <copyField source="journal" dest="journal_sort"/>
  <copyField source="year" dest="year_sort"/>

  <fieldType name="string" class="solr.StrField" sortMissingLast="true" />
  <fieldType name="long" class="solr.TrieLongField" precisionStep="0" omitNorms="true" positionIncrementGap="0" />

  <!-- All of the below text types have a LengthFilter applied, so that
       exceptionally long terms will not generate Solr/Lucene exceptions
       (see LUCENE-5472, Solr >= 4.8.0). This is a safety measure against
       crazy OCR data. -->

  <!-- Don't even tokenize (for certain kinds of faceting) -->
  <fieldType name="text_noTokens" class="solr.TextField" positionIncrementGap="20">
    <analyzer>
      <!-- This tokenizer is completely misnamed: it does nothing to the input string -->
      <tokenizer class="solr.KeywordTokenizerFactory" />
      <filter class="solr.LengthFilterFactory" min="1" max="32766" />
    </analyzer>
  </fieldType>

  <!-- Split on commas, for faceting on the "Author" field -->
  <fieldType name="text_commaDelimited" class="solr.TextField" positionIncrementGap="20">
    <analyzer>
      <tokenizer class="solr.PatternTokenizerFactory" pattern=",\s*" />
      <filter class="solr.LengthFilterFactory" min="1" max="32766" />
    </analyzer>
  </fieldType>

  <!-- A field that splits on dashes and preserves original tokens; this is
       used only for page numbers (issue #4) -->
  <fieldType name="text_pageNumber" class="solr.TextField" positionIncrementGap="20">
    <analyzer>
      <tokenizer class="solr.WhitespaceTokenizerFactory"/>
      <filter class="solr.LengthFilterFactory" min="1" max="32766" />
      <filter class="solr.WordDelimiterFilterFactory"
              splitOnCaseChange="0" splitOnNumerics="0"
              stemEnglishPossessive="0" preserveOriginal="1"/>
    </analyzer>
  </fieldType>

  <!-- A text field that:
         - splits tokens by whitespace or punctuation (issue #2)
         - lowercases -->
  <fieldType name="text_splitLower" class="solr.TextField" positionIncrementGap="100">
    <analyzer>
      <tokenizer class="solr.StandardTokenizerFactory"/>
      <filter class="solr.LengthFilterFactory" min="1" max="32766" />
      <filter class="solr.LowerCaseFilterFactory"/>
    </analyzer>
  </fieldType>

  <!-- All the processing of the previous filter, plus:
          - removal of stop words -->
  <fieldType name="text_splitLowerStop" class="solr.TextField" positionIncrementGap="100">
    <analyzer>
      <tokenizer class="solr.StandardTokenizerFactory"/>
      <filter class="solr.LengthFilterFactory" min="1" max="32766" />
      <filter class="solr.StopFilterFactory"
              ignoreCase="true" words="stopwords.txt"/>
      <filter class="solr.LowerCaseFilterFactory"/>
    </analyzer>
  </fieldType>

  <!-- All the processing of the previous filter, plus:
         - Removal of 's from the end of English possessives
         - English-language stemming
  -->
  <fieldType name="text_splitLowerStopStem" class="solr.TextField" positionIncrementGap="100">
    <analyzer>
      <tokenizer class="solr.StandardTokenizerFactory"/>
      <filter class="solr.LengthFilterFactory" min="1" max="32766" />
      <filter class="solr.StopFilterFactory"
              ignoreCase="true" words="stopwords.txt"/>
      <filter class="solr.LowerCaseFilterFactory"/>
      <filter class="solr.EnglishPossessiveFilterFactory"/>
      <filter class="solr.PorterStemFilterFactory"/>
    </analyzer>
  </fieldType>

  <!-- Similarity is the scoring routine for each document vs. a query.
       A custom Similarity or SimilarityFactory may be specified here, but
       the default is fine for most applications.
       For more info: http://wiki.apache.org/solr/SchemaXml#Similarity
    -->
  <!--
     <similarity class="com.example.solr.CustomSimilarityFactory">
       <str name="paramkey">param value</str>
     </similarity>
    -->
</schema>
