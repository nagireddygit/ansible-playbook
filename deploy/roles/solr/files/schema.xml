<?xml version="1.0" encoding="UTF-8" ?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.

 The portions of this file that are relevant to the RLetters project are
 released under the MIT license.

 This file should not need to be modified by any end users of RLetters,
 unless you are attempting to add more fields to documents.
-->

<schema name="rletters" version="1.5">

 <fields>
   <!-- Required by Solr internals in version 4 -->
   <field name="_version_" type="long" indexed="true"  stored="true"/>

   <!-- SHA-1 sum and DOI are stored verbatim -->
   <field name="shasum" type="string" indexed="true" stored="true" required="true" omitNorms="true" />
   <field name="doi" type="string" indexed="true" stored="true" omitNorms="true" />

   <!-- The license type and URL are stored verbatim -->
   <field name="license" type="string" indexed="true" stored="true" omitNorms="true" />
   <field name="license_url" type="string" indexed="true" stored="true" omitNorms="true" />

   <!-- The original bibliographic data: search it, but don't delete stopwords -->
   <field name="authors" type="text_splitLower" indexed="true" stored="true" omitNorms="true" />
   <field name="title" type="text_splitLower" indexed="true" stored="true" omitNorms="true" />
   <field name="journal" type="text_splitLower" indexed="true" stored="true" omitNorms="true" />
   <field name="year" type="text_splitLower" indexed="true" stored="true" omitNorms="true" />
   <field name="volume" type="text_splitLower" indexed="true" stored="true" omitNorms="true" />
   <field name="number" type="text_splitLower" indexed="true" stored="true" omitNorms="true" />
   <field name="pages" type="text_pageNumber" indexed="true" stored="true" omitNorms="true" />

   <!-- The original full text, for text analysis -->
   <field name="fulltext" type="text_splitLower" indexed="true" stored="true" omitNorms="false" termVectors="true" termPositions="true" termOffsets="true" />

   <!-- The full text for searching, with stop words removed -->
   <field name="fulltext_search" type="text_splitLowerStop" indexed="true" stored="false" omitNorms="true" />

   <!-- These three fields can be searched with stemming enabled -->
   <field name="title_stem" type="text_splitLowerStopStem" indexed="true" stored="false" omitNorms="true" />
   <field name="journal_stem" type="text_splitLowerStopStem" indexed="true" stored="false" omitNorms="true" />
   <field name="fulltext_stem" type="text_splitLowerStopStem" indexed="true" stored="false" omitNorms="false" />

   <!-- Faceting stores data in different formats (authors are tokenized by author,
        journals aren't tokenized whatsoever) -->
   <field name="authors_facet" type="text_commaDelimited" indexed="true" stored="false" omitNorms="true" />
   <field name="journal_facet" type="text_noTokens" indexed="true" stored="false" omitNorms="true" />

   <!-- Sorting requires fields that aren't tokenized at all -->
   <field name="authors_sort" type="text_noTokens" indexed="true" stored="false" omitNorms="true" />
   <field name="title_sort" type="text_noTokens" indexed="true" stored="false" omitNorms="true" />
   <field name="journal_sort" type="text_noTokens" indexed="true" stored="false" omitNorms="true" />
   <field name="year_sort" type="text_noTokens" indexed="true" stored="false" omitNorms="true" />
 </fields>

  <!-- Field to use to determine and enforce document uniqueness.
       Unless this field is marked with required="false", it will be a
       required field
   -->
  <uniqueKey>shasum</uniqueKey>

  <!-- Copy our _stem fields -->
  <copyField source="title" dest="title_stem"/>
  <copyField source="journal" dest="journal_stem"/>
  <copyField source="fulltext" dest="fulltext_stem"/>

  <!-- Copy over the full text to the search field -->
  <copyField source="fulltext" dest="fulltext_search"/>

  <!-- Copy our facet fields -->
  <copyField source="authors" dest="authors_facet"/>
  <copyField source="journal" dest="journal_facet"/>

  <!-- Copy our sort fields -->
  <copyField source="authors" dest="authors_sort"/>
  <copyField source="title" dest="title_sort"/>
  <copyField source="journal" dest="journal_sort"/>
  <copyField source="year" dest="year_sort"/>

  <types>
    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>
    <fieldType name="long" class="solr.TrieLongField" precisionStep="0" omitNorms="true" positionIncrementGap="0" />

    <!-- Don't even tokenize (for certain kinds of faceting) -->
    <fieldType name="text_noTokens" class="solr.TextField" positionIncrementGap="20">
      <analyzer>
        <!-- This tokenizer is completely misnamed: it does nothing to the input string -->
        <tokenizer class="solr.KeywordTokenizerFactory" />
      </analyzer>
    </fieldType>

    <!-- Split on commas, for faceting on the "Author" field -->
    <fieldType name="text_commaDelimited" class="solr.TextField" positionIncrementGap="20">
      <analyzer>
        <tokenizer class="solr.PatternTokenizerFactory" pattern=",\s*" />
      </analyzer>
    </fieldType>

    <!-- A field that splits on dashes and preserves original tokens; this is
         used only for page numbers (issue #4) -->
    <fieldType name="text_pageNumber" class="solr.TextField" positionIncrementGap="20">
      <analyzer>
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.WordDelimiterFilterFactory"
                splitOnCaseChange="0"
                splitOnNumerics="0"
                stemEnglishPossessive="0"
                generateWordParts="1"
                generateNumberParts="1"
                catenateWords="0"
                catenateNumbers="0"
                catenateAll="0"
                preserveOriginal="1"/>
      </analyzer>
    </fieldType>

    <!-- A text field that:
           - splits words
           - lowercases
           - removes punctuation from beginning and end of tokens (issue #2)

         No removing of stop words, though, for text analysis. -->
    <fieldType name="text_splitLower" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.ClassicTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <!-- We do *not* want ClassicFilterFactory here, as that removes
             apostrophe-S from the end of possessives, which is bad for
             text analysis.  Instead, strip all punctuation from the beginning
             and end of every word. -->
        <filter class="solr.PatternReplaceFilterFactory"
                pattern="^(\p{P}*)(.*?)(\p{P}*)$"
                replacement="$2"/>
      </analyzer>
    </fieldType>

    <!-- All the processing of the previous filter, plus removing of stop
         words -->
    <fieldType name="text_splitLowerStop" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.ClassicTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.PatternReplaceFilterFactory"
                pattern="^(\p{P}*)(.*?)(\p{P}*)$"
                replacement="$2"/>
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords.txt"
                enablePositionIncrements="true"/>
      </analyzer>
    </fieldType>

    <!-- All the processing of the previous filter, plus:
           - Add WordDelimiterFilter to split on case-change, al-num boundaries,
             and non-alphanumeric characters ("wifi", "wi fi" match "Wi-Fi")
           - English-language stemming
    -->
    <fieldType name="text_splitLowerStopStem" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.ClassicTokenizerFactory"/>
        <filter class="solr.ClassicFilterFactory"/>
        <filter class="solr.WordDelimiterFilterFactory"
                generateWordParts="1" generateNumberParts="1"
                catenateWords="1" catenateNumbers="1" catenateAll="0"
                splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.PatternReplaceFilterFactory"
                pattern="^(\p{P}*)(.*?)(\p{P}*)$"
                replacement="$2"/>
        <filter class="solr.SnowballPorterFilterFactory" language="English"
                protected="protwords.txt"/>
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords.txt"
                enablePositionIncrements="true"/>
      </analyzer>
    </fieldType>
 </types>

</schema>
